{
	"private": true,
	"scripts": {
		"start": "npm run compile && electron build/production/Rambox",
		"debug": "electron --inspect build/production/Rambox",
		"test": "mocha test/tests/**/*.spec.js",
		"buildversion": "git show --pretty=\"%h %d %cD\" -s > build/production/Rambox/BUILDVERSION || node -p -e \"require('./build/production/Rambox/package.json').version\" > build/production/Rambox/BUILDVERSION",
		"clean": "shx rm -rf ./build/production",
		"compile": "sencha app build && shx cp app/package.json app/package-lock.json build/production/Rambox/ && npm run buildversion && electron-builder install-app-deps",
		"recompile": "npm run distclean && npm run compile",
		"distclean": "shx rm -rf ./dist",
		"distclean:win": "shx rm -rf ./dist/win-{ia32-,}unpacked",
		"distclean:linux": "shx rm -rf ./dist/linux-{ia32-,}unpacked",
		"distclean:osx": "shx rm -rf ./dist/macos-unpacked",
		"pack": "electron-builder --dir",
		"pack:osx": "electron-builder --macos --dir",
		"pack:win": "electron-builder --win --ia32 --x64 --dir",
		"pack:win32": "electron-builder --win --ia32 --dir",
		"pack:win64": "electron-builder --win --x64 --dir",
		"pack:linux": "electron-builder --linux --ia32 --x64 --dir",
		"pack:linux32": "electron-builder --linux --ia32 --dir",
		"pack:linux64": "electron-builder --linux --x64 --dir",
		"pack:all": "electron-builder -mwl --ia32 --x64 --dir",
		"build": "electron-builder",
		"build:osx": "electron-builder --macos",
		"build:linux": "electron-builder --linux --ia32 --x64",
		"build:linux32": "electron-builder --linux --ia32",
		"build:linux64": "electron-builder --linux --x64",
		"build:win": "electron-builder --win --ia32 --x64",
		"build:win32": "electron-builder --win --ia32",
		"build:win64": "electron-builder --win --x64",
		"build:all": "electron-builder -mwl --ia32 --x64",
		"setup": "npm run clean && npm run compile && npm run build",
		"setup:osx": "npm run clean && npm run compile && npm run build:osx",
		"setup:win": "npm run clean && npm run compile && npm run build:win",
		"setup:win32": "npm run clean && npm run compile && npm run build:win32",
		"setup:win64": "npm run clean && npm run compile && npm run build:win64",
		"setup:linux": "npm run clean && npm run compile && npm run build:linux",
		"setup:linux32": "npm run clean && npm run compile && npm run build:linux32",
		"setup:linux64": "npm run clean && npm run compile && npm run build:linux64",
		"repack": "npm run clean && npm run compile && npm run distclean && npm run pack",
		"repack:osx": "npm run clean && npm run compile && npm run distclean:osx && npm run pack:osx",
		"repack:win": "npm run clean && npm run compile && npm run distclean:win && npm run pack:win",
		"repack:win32": "npm run clean && npm run compile && npm run distclean:win && npm run pack:win32",
		"repack:win64": "npm run clean && npm run compile && npm run distclean:win && npm run pack:win64",
		"repack:linux": "npm run clean && npm run compile && npm run distclean:linux && npm run pack:linux",
		"repack:linux32": "npm run clean && npm run compile && npm run distclean:linux && npm run pack:linux32",
		"repack:linux64": "npm run clean && npm run compile && npm run distclean:linux && npm run pack:linux64",
		"dist": "npm run repack"
	},
	"build": {
		"productName": "Rambox-OS",
		"appId": "com.thegoddessinari.rambox",
		"asar": true,
		"publish": null,
		"mac": {
			"category": "public.app-category.productivity",
			"target": [
				"default"
			]
		},
		"dmg": {
			"title": "Rambox-OS",
			"iconSize": 128,
			"contents": [
				{
					"x": 355,
					"y": 125,
					"type": "link",
					"path": "/Applications"
				},
				{
					"x": 155,
					"y": 125,
					"type": "file"
				}
			]
		},
		"win": {
			"target": [
				"nsis"
			]
		},
		"linux": {
			"category": "Network",
			"desktop": {
				"Terminal": "false",
				"Type": "Application",
				"Categories": "Network;Email;Chat;InstantMessaging;"
			},
			"target": [
				"tar.gz",
				"deb",
				"rpm",
				"AppImage"
			]
		},
		"directories": {
			"buildResources": "resources/installer/",
			"output": "dist/",
			"app": "build/production/Rambox/"
		}
	},
	"devDependencies": {
		"asar": "^2.0.1",
		"chai": "^4.2.0",
		"crowdin": "^1.0.0",
		"csvjson": "^5.1.0",
		"electron": "^5.0.1",
		"electron-builder": "^20.40.2",
		"mocha": "^6.1.4",
		"shx": "^0.3.2",
		"spectron": "^5.0.0"
	}
}
